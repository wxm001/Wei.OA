@model Wei.OA.Model.UserInfo

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>

    <script src="~/Scripts/jquery-1.7.1.js"></script>
    <script src="~/Scripts/old/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">

        function afterEdit(data) {
            if (data=="ok") {
               window.parent.window.afterEditSuccess();//调用父容器的方法
            } else {
                alert("失败");
            }
        }
        //给父容器的修改按钮点击之后调用
        function submitForm() {
            $("form").submit();
        }

    </script>
</head>
<body>
    @using (Ajax.BeginForm(new AjaxOptions(){OnSuccess = "afterEdit"}))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>修改用户信息</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
    
            <div class="form-group">
                @Html.LabelFor(model => model.UName,"用户名", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Pwd, "密码", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pwd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ShowName, "昵称", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShowName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShowName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @Html.HiddenFor(model => model.DelFlag, new { htmlAttributes = new { @class = "form-control" } })

    
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, "备注", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
    

            @Html.HiddenFor(model => model.ModfiliedOn, new { htmlAttributes = new { @class = "form-control" } })


            @Html.HiddenFor(model => model.SubTime, new { htmlAttributes = new { @class = "form-control" } })

    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="保存" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
</body>
</html>
